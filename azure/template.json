{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "appServiceAllowedIPs": {
            "type": "array",
            "defaultValue": []
        },
        "sharedBackEndAppServicePlanName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedSqlServerName": {
            "type": "string"
        },
        "elasticPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "databaseSkuName": {
            "type": "string",
            "defaultValue": "S0"
        },
        "databaseTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "serverlessAutoPauseDelay": {
            "type": "string",
            "defaultValue": "480"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "internalApiCustomHostname": {
            "type": "string",
            "defaultValue": ""
        },
        "internalApiCertificateName": {
            "type": "string"
        },
        "keyVaultName": {
            "type": "string"
        },
        "storageAccountContainerArray": {
            "type": "array"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "sharedBackEndSubnetResourceId": {
            "type": "string"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "internalApiAppServiceName": "[concat(variables('resourceNamePrefix'), 'intapi-as')]",
        "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]",
        "storageAccountName": "[toLower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str'))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('internal-api-app-insights-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('internalApiAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('internalApiAppServiceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('app-service-certificate-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('internalApiCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('internal-api-app-service-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('internalApiAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedBackEndAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "subnetResourceId": {
                        "value": "[parameters('sharedBackEndSubnetResourceId')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(concat('internal-api-app-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                                }
                            ]
                        }
                    },
                    "appServiceConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('loggingRedisConnectionString')]",
                                    "type": "Custom"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('internalApiCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('internalApiCertificateName')), 0), reference(concat('app-service-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value, '')]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('internal-api-app-insights-', parameters('utcValue'))]",
                "[concat('sql-database-', parameters('utcValue'))]",
                "[concat('app-service-certificate-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('sql-database-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSqlServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('elasticPoolName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('databaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('databaseTier')]"
                    },
                    "serverlessAutoPauseDelay": {
                        "value": "[parameters('serverlessAutoPauseDelay')]"
                    },
                    "logAnalyticsSubscriptionId": {
                        "value": "[parameters('logAnalyticsSubscriptionId')]"
                    },
                    "logAnalyticsResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('storage-account-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('storage-account-container', parameters('storageAccountContainerArray')[copyindex()])]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[greater(length(parameters('storageAccountContainerArray')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-container.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "containerName": {
                        "value": "[parameters('storageAccountContainerArray')[copyIndex()]]"
                    },
                    "publicAccess": {
                        "value": "None"
                    }
                }
            },
            "copy": {
                "name": "storageaccountcontainercopy",
                "count": "[length(parameters('storageAccountContainerArray'))]"
            },
            "dependsOn": [
                "[concat('storage-account-', parameters('utcValue'))]"
            ]
        }
    ],
    "outputs": {
        "InternalApiAppServiceName": {
            "type": "string",
            "value": "[variables('internalApiAppServiceName')]"
        },
        "DatabaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        },
        "StorageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}
