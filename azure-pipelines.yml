name: das-pensionsregulator
parameters:
- name: OverrideBlockOnPossibleDataLoss
  displayName: Add /p:BlockOnPossibleDataLoss=false argument to DACPAC deployment
  type: boolean
  default: false

trigger:
  batch: true
  branches:
    include:
      - "master"

variables:
  - name: SolutionBaseName
    value: SFA.DAS.PensionsRegulator
  - group: BUILD Management Resources
  - name: BuildConfiguration
    value: release
  - name: BuildPlatform
    value: anycpu
  - group: RELEASE Management Resources
  - group: RELEASE das-pensionsregulator
  - name: Deploy
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'PullRequest'))

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/tags/2.1.28
    endpoint: SkillsFundingAgency
  - repository: das-platform-automation
    type: github
    name: SkillsFundingAgency/das-platform-automation
    ref: refs/tags/5.1.8
    endpoint: SkillsFundingAgency
  pipelines:
  - pipeline: das-employer-config
    project: Digital Apprenticeship Service
    source: das-employer-config
    branch: master

stages:
- stage: Build
  jobs:
  - template: pipeline-templates/job/code-build.yml
  - template: pipeline-templates/job/dacpac-build.yml

# - stage: Deploy_AT
#   dependsOn: Build
#   displayName: Deploy to AT
#   condition: and(succeeded(), eq(variables.Deploy, 'true'))
#   variables:
#   - group: DevTest Management Resources
#   - group: AT DevTest Shared Resources
#   jobs:
#   - template: pipeline-templates/job/deploy.yml
#     parameters:
#       Environment: AT
#       ServiceConnection: SFA-DAS-DevTest-ARM
#       OverrideBlockOnPossibleDataLoss: ${{ parameters.OverrideBlockOnPossibleDataLoss  }}
